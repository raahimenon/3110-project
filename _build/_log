### Starting build.
# Target: test.ml.depends, tags: { package(graphics), package(oUnit), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, thread, traverse }
ocamlfind ocamldep -package oUnit -package graphics -modules test.ml > test.ml.depends # cached
# Target: loading.mli.depends, tags: { package(graphics), package(oUnit), debug, extension:mli, file:loading.mli, ocaml, ocamldep, quiet, thread, traverse }
ocamlfind ocamldep -package oUnit -package graphics -modules loading.mli > loading.mli.depends # cached
# Target: loading.cmi, tags: { package(graphics), package(oUnit), byte, compile, debug, extension:mli, file:loading.mli, interf, ocaml, quiet, thread, traverse }
ocamlfind ocamlc -c -g -thread -package oUnit -package graphics -o loading.cmi loading.mli # cached
# Target: test.cmo, tags: { package(graphics), package(oUnit), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, thread, traverse }
ocamlfind ocamlc -c -g -thread -package oUnit -package graphics -o test.cmo test.ml # cached
# Target: loading.ml.depends, tags: { package(graphics), package(oUnit), debug, extension:ml, file:loading.ml, ocaml, ocamldep, quiet, thread, traverse }
ocamlfind ocamldep -package oUnit -package graphics -modules loading.ml > loading.ml.depends # cached
# Target: loading.cmo, tags: { package(graphics), package(oUnit), byte, compile, debug, extension:cmo, extension:ml, file:loading.cmo, file:loading.ml, implem, ocaml, quiet, thread, traverse }
ocamlfind ocamlc -c -g -thread -package oUnit -package graphics -o loading.cmo loading.ml # cached
# Target: test.byte, tags: { package(graphics), package(oUnit), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, thread, traverse }
ocamlfind ocamlc -linkpkg -g -thread -package oUnit -package graphics loading.cmo test.cmo -o test.byte # cached
# Compilation successful.
